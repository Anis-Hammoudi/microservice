version: '3.8'

# Define a default configuration for the microservices to avoid repetition
x-service-defaults: &service-defaults
  restart: unless-stopped
  depends_on:
    postgres:
      condition: service_healthy
    kafka:
      condition: service_healthy
    zipkin:
      condition: service_started
  environment:
    - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    # Set the datasource URL to point to the single 'orders' database
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/orders
    - SPRING_DATASOURCE_USERNAME=postgress
    - SPRING_DATASOURCE_PASSWORD=admin
    # Set the Zipkin URL to point to the Zipkin service
    - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411
  networks:
    - microservices-network

services:
  # Single PostgreSQL instance for all microservices
  postgres:
    image: postgres:15
    container_name: pg-orders
    environment:
      POSTGRES_DB: orders
      POSTGRES_USER: postgress
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "psql -U postgress -d orders -c '\\q'" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  # Zookeeper and Kafka for messaging
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment: { ZOOKEEPER_CLIENT_PORT: 2181 }
    networks: [microservices-network]

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on: [ zookeeper ]
    ports: [ "9092:9092" ]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  # Zipkin for Distributed Tracing
  zipkin:
    image: openzipkin/zipkin:2
    ports:
      - "9411:9411"
    networks:
      - microservices-network

  # --- Microservices ---

  order-service:
    <<: *service-defaults # Inherit common properties
    build: ./orderService
    ports: ["8081:8081"]

  kitchen-service:
    <<: *service-defaults # Inherit common properties
    build: ./kitchenService
    ports: ["8082:8082"]

  delivery-service:
    <<: *service-defaults # Inherit common properties
    build: ./DeliveryService
    ports: ["8083:8083"]

# Define the custom network and shared volume
networks:
  microservices-network:
    driver: bridge
volumes:
  pgdata:
